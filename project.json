{
  "navigation" : [
    {
        "title": "Html5",
        "src": "../static/img/html5.png",
        "description": {
          "HTML5" : "последняя версия стандарта HTML. Термин имеет два определения: Новая версия языка HTML, с новыми элементами, атрибутами и новым поведением. Набор технологий, позволяющий создавать разнообразные сайты и Web-приложения.",
          "Семантика" : "позволяет точнее описывать, что из себя представляет ваш контент",
          "Связь" : "новые способы общения с сервером",
          "Стилизация" : "создание изощренных и совершенных тем",
          "Доступ к устройствам" : "использование разных устройств для ввода и вывода информации",
          "Графика и эффекты" : "способы значительно разнообразить  представление",
          "Мультимедиа" : "создание и взаимодействие с видео и звуком",
          "Оффлайн и Хранилище" : "методы, позволяющие сохранять информацию локально на стороне клиента"
        }
    },
    {
        "title": "CSS3",
        "src": "../static/img/css3.png",
        "description": {
          "CSS3" : "это последнее эволюционное изменение языка Cascading Style Sheets, и оно направлено на расширение CSS2.1. Оно привносит давно ожидаемые новшества, такие как закруглённые углы, тени, градиенты, переходы или анимация, а также новые макеты, такие как multi-columns, «резиновый» дизайн или сеточный макет. Экспериментальный функционал помечен специальными префиксами разработчика, и он не должен использоваться в производственной среде, либо должен использоваться с особой осторожностью, так как его синтаксис и поведение может быть изменено в будующем.",
          "Модули и процесс стандартизации" : "CSS Level 2 потребовалось 9 лет, с августа 2002 до июня 2011, чтобы получить статус рекомендации. Это случилось по причине того, что несколько вторичных особенностей задерживали всю спецификацию. Чтобы ускорить стандартизацию беспроблемных частей, Рабочая группа CSS W3C в своём решении известном как Пекинская доктрина, разделила CSS на меньшие компоненты, называемые модулями. Каждый из таких модулей теперь является независимой частью языка и проходит стандартизацию в своем темпе, независимо от других частей. Когда одни модули уже имеют статус рекомендации W3C, другие всё ещё находятся в стадии разработки. Так же появляются новые модули, когда в этом есть необходимость."
        }
    },
    {
        "title": "JavaScript",
        "src": "../static/img/js.png",
        "description": {
          "JavaScript" : "мультипарадигменный язык программирования. Поддерживает объектно-ориентированный, императивный и функциональный стили. Является реализацией языка ECMAScript.",
          "JScript" : "обычно используется как встраиваемый язык для программного доступа к объектам приложений. Наиболее широкое применение находит в браузерах как язык сценариев для придания интерактивности веб-страницам.",
          "Основные" : "архитектурные черты: динамическая типизация, слабая типизация, автоматическое управление памятью, прототипное программирование, функции как объекты первого класса.",
          "На JavaScript":"оказали влияние многие языки, при разработке была цель сделать язык похожим на Java, но при этом лёгким для использования непрограммистами. Языком JavaScript не владеет какая-либо компания или организация, что отличает его от ряда языков программирования, используемых в веб-разработке"
        }
    },
    {
        "title": "jQuery",
        "src": "../static/img/jquery.png",
        "description": {
          "jQuery" : "библиотека JavaScript, фокусирующаяся на взаимодействии JavaScript и HTML. Библиотека jQuery помогает легко получать доступ к любому элементу DOM, обращаться к атрибутам и содержимому элементов DOM, манипулировать ими. Также библиотека jQuery предоставляет удобный API для работы с AJAX. Сейчас разработка jQuery ведётся командой jQuery во главе с Джоном Резигом."
        }
    },
    {
        "title": "React.js",
        "src":"../static/img/react.png",
        "description": {
          "React" : "это библиотека JavaScript, которая используется для создания пользовательского интерфейса. React был создан компанией Facebook, а первый релиз библиотеки увидел свет в марте 2013 года. Текущей версий на данный момент (октябрь 2017 года) является версия React v16.0.",
          "Виртуальный DOM" : "Вся структура веб-страницы может быть представлена с помощью DOM (Document Object Model)- организация элементов html, которыми мы можем манипулировать, изменять, удалять или добавлять новые. Для взаимодействия с DOM применяется язык JavaScript. Однако когда мы пытаемся манипулировать html-элементами с помощью JavaScript, то мы можем столкнуться со снижением производительности, особенно при изменении большого количества элементов. А операции над элементами могут занять некоторое время, что неизбежно скажется на пользовательском опыте. Однако если бы мы работали из кода js с объектами JavaScript, то операции производились бы быстрее.",
          "Другие особенности React" : "Другой отличительной чертой библиотеки является концентрация на компонентах - мы можем создать отдельные компоненты и затем их легко переносить из проекта в проект. Еще одна особенность React - использование JSX. JSX представляет комбинацию кода JavaScript и XML и предоставляет простой и интуитивно понятный способ для определения кода визуального интерфейса."
        }
    },
    {
        "title": "Vue.js",
        "src":"../static/img/Vue.js_.png",
        "description": {
          "Vue" : "прогрессивный JavaScript-фреймворк с открытым исходным кодом для создания пользовательских интерфейсов. Является реализацией идей реактивного программирования. Легко интегрируется в проекты с использованием других JavaScript-библиотек, благодаря постепенно внедряемой экосистеме. Vue может функционировать как web-фреймворк, помогающий разрабатывать продвинутые одностраничные приложения.",
          "Vue.js" : "популярный JavaScript фреймворк, созданный для организации и упрощения веб-разработки.Проект стремится сделать идеи разработки пользовательских интерфейсов в вебе более доступными (компоненты, декларативный пользовательский интерфейс, горячая перезагрузка, отладка во времени и т.д.). Фреймворк нацелен быть менее строгим, что делает его проще для подхвата разработчиками. Предлагает инкрементально адаптируемую архитектуру. Ядро фокусируется на декларативном рендеринге, композиции компонент и может быть встроен в существующие страницы. Продвинутые возможности, требующиеся для комплексных приложений (такие как маршрутизация, управление состоянием и инструментарий сборки), распространяются через официально поддерживаемые библиотеки и пакеты."
        }
    },
    {
        "title": "Angular.js",
        "src":"../static/img/angular.png",
        "description": {
          "AngularJS" : "JavaScript-фреймворк с открытым исходным кодом. Предназначен для разработки одностраничных приложений. Его цель — расширение браузерных приложений на основе MVC-шаблона, а также упрощение тестирования и разработки.",
          "Фреймворк" : "работает с HTML, содержащим дополнительные пользовательские атрибуты, которые описываются директивами, и связывает ввод или вывод области страницы с моделью, представляющей собой обычные переменные JavaScript. Значения этих переменных задаются вручную или извлекаются из статических или динамических JSON-данных."
        }
    }
  ]
}
         